<launch>

	<!-- domain file -->
	<param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	<param name="planner_path" value="$(find rosplan_planning_system)/common/bin/" />

	<!-- domain file -->
	<param name="domain_path" value="$(find squirrel_planning_launch)/common/domain_tidy_room.pddl" />

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
	</node>

	<!-- scene database (MongoDB) -->
	<node name="rosplan_scene_database" pkg="mongodb_store" type="mongodb_server.py" respawn="false" output="screen">
	    <param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB" />
	</node>
	<node name="rosplan_scene_message_store" pkg="mongodb_store" type="message_store_node.py" respawn="false" output="log">
	</node>

	<!-- planning system -->
	<node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
		<!-- directory for generated files -->
	    <param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	    <param name="problem_path" value="$(find squirrel_planning_launch)/common/problem.pddl" />
            <param name="strl_file_path" value="$(find squirrel_planning_launch)/common/plan.strl" />

		<!-- to run the planner -->
	    <param name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf -n" />
            <param name="generate_default_problem" value="false" />
	</node>

<!--
	<node name="squirrel_interface_recursion" pkg="squirrel_planning_execution" type="rpsquirrelRecursion" respawn="false" output="screen">
	    <param name="occupancy_topic" value="/squirrel_nav/occupancy_map" />
	</node>

	<node name="squirrel_create_examine_waypoint" pkg="squirrel_perception_waypoint" type="squirrel_create_examine_waypoint" required="true">

	</node>
-->

</launch>

